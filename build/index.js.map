{"version":3,"file":"index.js","mappings":"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A;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://my-custom-block/./src/edit.js","webpack://my-custom-block/./src/index.js","webpack://my-custom-block/./src/save.js","webpack://my-custom-block/./src/editor.scss","webpack://my-custom-block/./src/style.scss","webpack://my-custom-block/external window \"React\"","webpack://my-custom-block/external window [\"wp\",\"blockEditor\"]","webpack://my-custom-block/external window [\"wp\",\"blocks\"]","webpack://my-custom-block/external window [\"wp\",\"components\"]","webpack://my-custom-block/external window [\"wp\",\"coreData\"]","webpack://my-custom-block/external window [\"wp\",\"data\"]","webpack://my-custom-block/external window [\"wp\",\"element\"]","webpack://my-custom-block/external window [\"wp\",\"i18n\"]","webpack://my-custom-block/webpack/bootstrap","webpack://my-custom-block/webpack/runtime/chunk loaded","webpack://my-custom-block/webpack/runtime/compat get default export","webpack://my-custom-block/webpack/runtime/define property getters","webpack://my-custom-block/webpack/runtime/hasOwnProperty shorthand","webpack://my-custom-block/webpack/runtime/make namespace object","webpack://my-custom-block/webpack/runtime/jsonp chunk loading","webpack://my-custom-block/webpack/before-startup","webpack://my-custom-block/webpack/startup","webpack://my-custom-block/webpack/after-startup"],"sourcesContent":["import { __ } from '@wordpress/i18n';\n\n\n\nimport {\n\tuseBlockProps,\n\tRichText,\n\tInspectorControls,\n\tAlignmentControl,\n\tBlockControls,\n\tPanelColorSettings\n} from '@wordpress/block-editor';\nimport './editor.scss';\n\n\n\nimport {\n\tuseState,\n\tuseEffect\n} from '@wordpress/element';\n\n\n\n\nimport { useEntityProp, useEntityId } from '@wordpress/core-data';\n\n\n\nimport {\n\tButton,\n\tTextControl,\n\tSelectControl,\n\tPanelBody,\n\tPanelRow,\n\tToggleControl,\n\tExternalLink\n} from '@wordpress/components';\n\n\n\nimport { useSelect, useDispatch, select } from '@wordpress/data';\n\n\n\n// const clicktobtn = () => {\n// \talert('click')\n// }\n// const MyButton = () => <Button variant=\"secondary\" onClick={clicktobtn}>Click me!</Button>;\n\n\n\nimport { __experimentalInputControl as InputControl } from '@wordpress/components';\n\n\n\nexport default function Edit({ attributes, setAttributes }) {\n\tconst { title, content, postMeta, customTaxonomy, align, textColor, backgroundColor, kaLink, linkLabel, hasLinkNofollow, productarr, sellcounter, mostsellproducts, mostsellvalue } = attributes;\n\n\t// var poid = acf.get('post_id');\n\t// console.log(poid);\n\n\t// var field = acf.getField('field_669108d710cb4');\n\t// console.log(field.data);\n\n\t// var field = acf.getField('field_669108d710cb4');\n\t// var fieldValue = field.getValue();\n\t// console.log(fieldValue);\n\n\n\tvar field = acf.getField('field_669108d710cb4');\n\tvar fieldValue = field.getValue();\n\n\t// const [fieldValue, setFieldValue] = useState(fieldValue1);\n\n\n\n\t// get post type using core/editor store\n\tconst postType = useSelect(\n\t\t(select) => select('core/editor').getCurrentPostType(),\n\t\t[]\n\t);\n\t// console.log(postType);\n\n\n\t// get post id using core/editor store\n\tconst postId = wp.data.select(\"core/editor\").getCurrentPostId();\n\t// console.log(postId);\n\n\n\t// get meta data using core/editore store\n\tconst meta = useSelect(\n\t\t(select) => {\n\t\t\tif (postId) {\n\t\t\t\treturn select('core/editor').getEditedPostAttribute('meta');\n\t\t\t}\n\t\t\treturn {};\n\t\t},\n\t\t[postId]\n\t);\n\t// console.log(meta);\n\n\n\t// const { editPost } = useDispatch('core/editor');\n\n\n\t// create a state and set meta sell count value\n\tconst [sellCount, setSellCount] = useState(meta.sell_count || '');\n\t// console.log(typeof(sellCount));\n\n\n\t// set sell count value in attributes\n\tsetAttributes({ sellcounter: sellCount })\n\n\n\t// useEffect(() => {\n\t// \tsetSellCount(meta.sell_count || '');\n\t// }, [meta.sell_count]);\n\n\n\t// set meta sell count value here onchange event\n\t// const updateMetaValue = (value) => {\n\t// \tsetSellCount(value);\n\t// \teditPost({ meta: { ...meta, sell_count: value } });\n\t// };\n\n\n\t// get taxonomy here using core store\n\tconst customTaxonomyTerms = useSelect((select) => {\n\t\tconst { getEntityRecords } = select('core');\n\t\treturn getEntityRecords('taxonomy', 'product_category', { per_page: -1 });\n\t}, []);\n\n\n\t// create a state \n\tconst [products, setProducts] = useState([]);\n\n\n\t// here get taxonomy \n\tuseEffect(() => {\n\t\tif (customTaxonomy) {\n\t\t\twp.apiFetch({\n\t\t\t\tpath: `/wp/v2/products?product_category=${customTaxonomy}`\n\t\t\t\t// path: `/cr/v1/mostproducts/{customTaxonomy}`\n\t\t\t}).then((fetchedProducts) => {\n\t\t\t\tsetProducts(fetchedProducts);\n\t\t\t\tsetAttributes({ productarr: fetchedProducts })\n\t\t\t});\n\t\t}\n\t}, [customTaxonomy]);\n\n\n\t// create a post using post types\n\tconst posts = useSelect((select) => {\n\t\treturn select('core').getEntityRecords('postType', 'products');\n\t}, []);\n\n\n\t// here set new value meta sell count\n\tconst setmetavalue = (value) => {\n\t\tsetAttributes({ sellcounter: value })\n\t\tlet testsell = jQuery('#sell_count[name=\"sell_count\"]').val(value)\n\n\t\tsetSellCount(value);\n\t\twp.apiFetch({\n\t\t\tpath: `/wp/v2/products/${postId}`,\n\t\t\tmethod: 'POST',\n\t\t\tdata: {\n\t\t\t\tmeta: {\n\t\t\t\t\tsell_count: value\n\t\t\t\t}\n\t\t\t}\n\t\t}).then(response => {\n\t\t\tconsole.log('Product meta updated:', response);\n\t\t});\n\t}\n\n\n\t// here create a state\n\tconst [sellcountproduct, setSellcountproduct] = useState(meta.sell_count || '');\n\tconst [sellproducts, setSellProducts] = useState([]);\n\t// console.log(typeof(sellcountproduct));\n\n\n\t// load when page reload\n\tuseEffect(() => {\n\t\tsetproductmetavalue(sellcountproduct);\n\t}, []);\n\n\n\t// get products using rest api\n\tconst setproductmetavalue = (value) => {\n\t\tsetAttributes({ mostsellvalue: value })\n\t\tif (sellcountproduct) {\n\t\t\twp.apiFetch({\n\t\t\t\tpath: `/cr/v1/mostproducts/${value}`\n\t\t\t}).then((fetchedProducts) => {\n\t\t\t\tsetSellProducts(fetchedProducts);\n\t\t\t\tsetAttributes({ mostsellproducts: fetchedProducts })\n\t\t\t});\n\t\t}\n\t}\n\n\n\tconst onChangeContent = (newContent) => {\n\t\tsetAttributes({ content: newContent })\n\t}\n\tconst onChangeAlign = (newAlign) => {\n\t\tsetAttributes({\n\t\t\talign: newAlign === undefined ? 'none' : newAlign,\n\t\t})\n\t}\n\tconst onChangeBackgroundColor = (newBackgroundColor) => {\n\t\tsetAttributes({ backgroundColor: newBackgroundColor })\n\t}\n\tconst onChangeTextColor = (newTextColor) => {\n\t\tsetAttributes({ textColor: newTextColor })\n\t}\n\tconst onChangeKaLink = (newKaLink) => {\n\t\tsetAttributes({ kaLink: newKaLink === undefined ? '' : newKaLink })\n\t}\n\tconst onChangeLinkLabel = (newLinkLabel) => {\n\t\tsetAttributes({ linkLabel: newLinkLabel === undefined ? '' : newLinkLabel })\n\t}\n\tconst toggleNofollow = () => {\n\t\tsetAttributes({ hasLinkNofollow: !hasLinkNofollow })\n\t}\n\n\n\t// const blockcount = wp.data.select('core/block-editor').getBlocks().length;\n\t// wp.data.select(\"core/block-editor\").getBlockCount()\n\n\t\n\n\treturn (\n\t\t<div {...useBlockProps()}>\n\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={attributes.align}\n\t\t\t\t\tonChange={onChangeAlign}\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title=\"Product List Settings\">\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{sellproducts && sellproducts.length > 0 ? sellproducts.map(product => (\n\t\t\t\t\t\t\t\t<li key={product.id}>\n\t\t\t\t\t\t\t\t\t<b>TITLE:</b> {product.name} ({product.sell_count})\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)) : <li>No products found</li>}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<InspectorControls>\n\t\t\t\t{/* <PanelBody title={__('Link Settings', 'my-custom-block')} initialOpen={true}>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={__('link', 'my-custom-block')}\n\t\t\t\t\t\t\t\tvalue={kaLink}\n\t\t\t\t\t\t\t\tonChange={onChangeKaLink}\n\t\t\t\t\t\t\t\thelp={__('Add your website link', 'my-custom-block')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={__('Link label', 'my-custom-block')}\n\t\t\t\t\t\t\t\tvalue={linkLabel}\n\t\t\t\t\t\t\t\tonChange={onChangeLinkLabel}\n\t\t\t\t\t\t\t\thelp={__('Add link label', 'my-custom-block')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel=\"Add rel = nofollow\"\n\t\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t\thasLinkNofollow\n\t\t\t\t\t\t\t\t\t\t? 'Has rel nofollow.'\n\t\t\t\t\t\t\t\t\t\t: 'No rel nofollow.'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchecked={hasLinkNofollow}\n\t\t\t\t\t\t\t\tonChange={toggleNofollow}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody> */}\n\n\t\t\t\t{/* <PanelColorSettings\n\t\t\t\t\ttitle={__('Color settings', 'my-custom-block')}\n\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\tcolorSettings={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: textColor,\n\t\t\t\t\t\t\tonChange: onChangeTextColor,\n\t\t\t\t\t\t\tlabel: __('Text color', 'my-custom-block')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: backgroundColor,\n\t\t\t\t\t\t\tonChange: onChangeBackgroundColor,\n\t\t\t\t\t\t\tlabel: __('Background color', 'my-custom-block')\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t/> */}\n\n\t\t\t\t{/* <TextControl\n\t\t\t\t\tlabel=\"Additional CSS Class\"\n\t\t\t\t\tvalue={title}\n\t\t\t\t\tonChange={(title) => setAttributes({\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t})}\n\t\t\t\t/> */}\n\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel=\"My Custom Field\"\n\t\t\t\t\tvalue={fieldValue}\n\t\t\t\t\tonChange={(newValue) => field.setValue(newValue)}\n\t\t\t\t/>\n\n\t\t\t\t{/* <TextControl\n\t\t\t\t\tlabel=\"My Custom Field\"\n\t\t\t\t\tvalue={fieldValue}\n\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\tsetFieldValue(newValue);\n\t\t\t\t\t\tacf_update_field('field_669108d710cb4', newValue);\n\t\t\t\t\t}}\n\t\t\t\t/> */}\n\n\t\t\t\t{/* <TextControl\n\t\t\t\t\tlabel=\"Sell Count\"\n\t\t\t\t\tvalue={sellCount}\n\t\t\t\t\t// onChange={(value) => updateMetaValue(value)}\n\t\t\t\t\tonChange={(value) => setmetavalue(value)}\n\t\t\t\t/> */}\n\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel=\"Most Sell Products\"\n\t\t\t\t\tvalue={sellcountproduct}\n\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\tsetSellcountproduct(value);\n\t\t\t\t\t\tsetproductmetavalue(value);\n\t\t\t\t\t\tsetmetavalue(value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\n\t\t\t\t{/* <InputControl\n\t\t\t\t\tvalue={content}\n\t\t\t\t\tonChange={(nextValue) => setAttributes({\n\t\t\t\t\t\tcontent: nextValue,\n\t\t\t\t\t})}\n\t\t\t\t/> */}\n\n\n\t\t\t\t<SelectControl\n\t\t\t\t\tlabel=\"Custom Taxonomy\"\n\t\t\t\t\tvalue={customTaxonomy}\n\t\t\t\t\toptions={customTaxonomyTerms ? customTaxonomyTerms.map(term => ({\n\t\t\t\t\t\tlabel: term.name,\n\t\t\t\t\t\tvalue: term.id\n\t\t\t\t\t})) : []}\n\t\t\t\t\tonChange={(value) => setAttributes({ customTaxonomy: value })}\n\t\t\t\t/>\n\n\t\t\t\t{/* <MyButton /> */}\n\t\t\t</InspectorControls>\n\n\n\t\t\t{/* <p><b>POST ID:</b> {postId}</p>\n\t\t\t<b><b>POST TYPE:</b> {postType}</b>\n\n\t\t\t<p><b>SELL COUNT VLAUE:</b> {sellCount}</p>\n\t\t\t<p><b>TITLE ATTRIBUTES:</b> {title}</p>\n\n\t\t\t<p><b>CONTENT ATTRIBUTES:</b> {content}</p>\n\t\t\t<p><b>CUSTOM TAXOMONY:</b> {customTaxonomy}</p> */}\n\n\t\t\t{/* <ul>\n\t\t\t\t{products && products.length > 0 ? products.map(product => (\n\t\t\t\t\t<div key={product.id}>\n\t\t\t\t\t\t<li><b>TITLE:</b> {product.title.rendered}</li>\n\t\t\t\t\t\t<li><b>SELL COUNT VALUE:</b> {product.meta.sell_count}</li>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t)) : <li>No products found</li>}\n\t\t\t</ul> */}\n\n\n\n\n\t\t\t<ul>\n\t\t\t\t{sellproducts && sellproducts.length > 0 ? sellproducts.map(product => (\n\t\t\t\t\t<div key={product.id}>\n\t\t\t\t\t\t<li><b>TITLE:</b> {product.name}</li>\n\t\t\t\t\t\t<li><b>SELL COUNT VALUE:</b> {product.sell_count}</li>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t)) : <li>No products found</li>}\n\t\t\t</ul>\n\n\n\t\t\t{/* <i>LATEST POST:\n\t\t\t\t{!posts && 'Loading'}\n\t\t\t\t{posts && posts.length === 0 && 'No Posts'}\n\t\t\t\t{posts && posts.length > 0 && (\n\t\t\t\t\t<a href={posts[0].link}>\n\t\t\t\t\t\t{posts[0].title.rendered}\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t</i> */}\n\n\n\t\t\t{/* <RichText\n\t\t\t\ttagName=\"p\"\n\t\t\t\tonChange={onChangeContent}\n\t\t\t\tallowedFormats={['core/bold', 'core/italic']}\n\t\t\t\tvalue={attributes.content}\n\t\t\t\tplaceholder={__('Write your text...')}\n\t\t\t\tstyle={{ textAlign: align, backgroundColor: backgroundColor, color: textColor }}\n\t\t\t/> */}\n\n\n\t\t\t{/* <ExternalLink\n\t\t\t\thref={kaLink}\n\t\t\t\tclassName=\"ka-button\"\n\t\t\t\trel={hasLinkNofollow ? \"nofollow\" : \"\"}>\n\t\t\t\t{linkLabel}\n\t\t\t</ExternalLink> */}\n\n\t\t</div>\n\t);\n}\n\n\n\n// getAllowedBlocks\n// wp.data.select(\"core/block-editor\").getBlockCount()\n// const blockCount = wp.data.select('core/block-editor').getBlocks().length;","\nimport { registerBlockType } from '@wordpress/blocks';\nimport './style.scss';\n\n\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\n\n\nregisterBlockType( metadata.name, {\n\tedit: Edit,\n\t// save,\n} );\n\n\n","// import { useBlockProps } from '@wordpress/block-editor';\n\n// export default function save() {\n// \treturn (\n// \t\t<div {...useBlockProps.save()}>\n// \t\t\t<button>save</button>\n// \t\t</div>\n// \t);\n// }\n\n\n\n// import { RichText, useBlockProps } from '@wordpress/block-editor';\n\n// export default function save( { attributes } ) {\n// \tconst { title, content, postMeta, customTaxonomy } = attributes;\n\n// \treturn (\n// \t\t<pre { ...useBlockProps.save() }>\n// \t\t\t<RichText.Content value={ content } />\n// \t\t\t{title}\n// \t\t\t{postMeta}\n// \t\t\t{customTaxonomy}\n// \t\t</pre>\n// \t);\n// }\n\n\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\n\nexport default function save({ attributes }) {\n\tconst { title, content, postMeta, customTaxonomy, backgroundColor, textColor, align, kaLink, linkLabel, hasLinkNofollow, productarr, sellcounter, mostsellvalue } = attributes;\n\t// console.log(attributes);\n\tconst blockProps = useBlockProps.save();\n\n\n\t// console.log(productarr);\n\t// console.log(sellcounter);\n\treturn (\n\t\t<div {...blockProps}>\n\n\t\t\t{/* <p>{sellcounter}</p> */}\n\t\t\t<p>{mostsellvalue}</p>\n\n\n\t\t\t{/* <RichText.Content\n\t\t\t\ttagName=\"p\"\n\t\t\t\tvalue={attributes.content}\n\t\t\t\tstyle={{ textAlign: align, backgroundColor: backgroundColor, color: textColor }}\n\t\t\t/> */}\n\n\t\t\t{/* <p>\n\t\t\t\t<a\n\t\t\t\t\thref={kaLink}\n\t\t\t\t\tclassName=\"ka-button\"\n\t\t\t\t\trel={hasLinkNofollow ? \"nofollow\" : \"noopener noreferrer\"}>\n\t\t\t\t\t{linkLabel}\n\t\t\t\t</a>\n\t\t\t</p>\n\n\t\t\t{\n\t\t\t\tproductarr.map((value, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t<p>{value.id}</p>\n\t\t\t\t\t\t\t<p>{value.title.rendered}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} */}\n\t\t</div>\n\t);\n}","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkmy_custom_block\"] = globalThis[\"webpackChunkmy_custom_block\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","RichText","InspectorControls","AlignmentControl","BlockControls","PanelColorSettings","useState","useEffect","useEntityProp","useEntityId","Button","TextControl","SelectControl","PanelBody","PanelRow","ToggleControl","ExternalLink","useSelect","useDispatch","select","__experimentalInputControl","InputControl","Edit","attributes","setAttributes","title","content","postMeta","customTaxonomy","align","textColor","backgroundColor","kaLink","linkLabel","hasLinkNofollow","productarr","sellcounter","mostsellproducts","mostsellvalue","field","acf","getField","fieldValue","getValue","postType","getCurrentPostType","postId","wp","data","getCurrentPostId","meta","getEditedPostAttribute","sellCount","setSellCount","sell_count","customTaxonomyTerms","getEntityRecords","per_page","products","setProducts","apiFetch","path","then","fetchedProducts","posts","setmetavalue","value","testsell","jQuery","val","method","response","console","log","sellcountproduct","setSellcountproduct","sellproducts","setSellProducts","setproductmetavalue","onChangeContent","newContent","onChangeAlign","newAlign","undefined","onChangeBackgroundColor","newBackgroundColor","onChangeTextColor","newTextColor","onChangeKaLink","newKaLink","onChangeLinkLabel","newLinkLabel","toggleNofollow","createElement","onChange","length","map","product","key","id","name","label","newValue","setValue","options","term","registerBlockType","save","metadata","edit","blockProps"],"sourceRoot":""}